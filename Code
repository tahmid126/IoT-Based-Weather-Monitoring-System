#include "thingProperties.h"
#include "DHT.h"

#define DHTpin 4 //connect to D2

#define DHTTYPE DHT11

DHT dht(DHTpin,DHTTYPE);
int sensor = A0;

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  float hm = dht.readHumidity();
  Serial.print("Humidity");
  Serial.print(hm);
  float temp = dht.readTemperature();
  Serial.print("Temperature");
  Serial.print(temp);

  int airqualityvalue = analogRead(sensor);
  Serial.print("Air Quality");
  Serial.print(airqualityvalue);
  humidity = hm;
  temperature = temp;
  airquality = airqualityvalue;

  message = "Temperature = " + String(temperature) + " Humidity = " + String(humidity) + " Air Quality = " + String(airqualityvalue);
  
}

/*
  Since Temperature is READ_WRITE variable, onTemperatureChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onTemperatureChange()  {
  // Add your code here to act upon Temperature change
}

/*
  Since Humidity is READ_WRITE variable, onHumidityChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onHumidityChange()  {
  // Add your code here to act upon Humidity change
}

/*
  Since Airquality is READ_WRITE variable, onAirqualityChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onAirqualityChange()  {
  // Add your code here to act upon Airquality change
}

/*
  Since Message is READ_WRITE variable, onMessageChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onMessageChange()  {
  // Add your code here to act upon Message change
}
